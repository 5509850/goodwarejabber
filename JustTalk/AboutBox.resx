<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAALAAA/+4ADkFkb2JlAGTAAAAAAf/bAEMA
        CwcHBwgHCwgICw8KCQoPEg0LCw0SFBEREhERFBQPEREREQ8UFBcYGhgXFCAgIiIgIC4sLCwuMzMzMzMz
        MzMzM//bAEMBCwoKCw0LDgwMDhIODg4SFA4ODg4UGREREhERGSAXFBQUFBcgHR4aGhoeHSMjICAjIyws
        KSwsMzMzMzMzMzMzM//AABEIAQMAgwMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUG
        BwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQz
        YnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaH
        iImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy
        8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAAB
        AncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqy
        s7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APXK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACimzSrDE8rZ2xqXbHXCjNcHP8Z9C
        UH7PZ3Mh7b9kYP5M9BrSoVat/Zx5rb9PzO+ory+f4zXbgi10+JD2MkrP+iqlZ1x8VfFcwIja3t/eOLJ/
        8is9B2QyjFy6Rj6yX6XPYaCQBk8D1rwq58ceLLgYl1OZQf8AnmRF/wCigtZdzql9c/8AH1dzT/8AXSR3
        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
        HtX0a8Ga5/XPAGh61ueaDyblv+XiDCPn1b+FvxFB30sf0qxv/eX+R4kZHkdnc5Zjkk1O97dzQQ2m4mOL
        iONR3JPp1PNdwvwZ1QX2w3sX2Hr5uG83Hp5fTPvurs9C8D6LoYDW0O+4A5uZfmkP0PRfwoOmpjqEYrl9
        97pLoeb6B8ONZ1PbNe/6BbHB/eDMrD/Zj4x/wKvRNC8I6Noqg2cAM+MNcSfNIf8AgX8P4VvCDFPEVB51
        bFVauknaP8sdiBYqlWOpBHTglBzjVWngUoWnYoAAKUUYpaACilooAWkxS0UANxRtp1FADNooxTsUUANx
        RinYoxQAzbRtp+KMUAM20uKdijFADcUuKXFLQAmKKWigAooooAWiiigApKWigBKKWigBKKWigBKKMUuK
        AEooxS0AJRS0UAJS0UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAU
        UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAU
        UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAU
        UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH//2Q==
</value>
  </data>
</root>